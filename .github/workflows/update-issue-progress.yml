name: Update Checklist Progress

on:
  issues:
    types: [opened, edited]
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue number to update (for manual runs)'
        required: false

permissions:
  issues: write

jobs:
  update-progress:
    name: Update Issue Progress
    runs-on: ubuntu-latest
    steps:
      - name: Update checklist progress in issues
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber =
              github.context?.inputs?.issue_number ||   // manual run
              context.payload?.issue?.number ||         // issues event
              1; // default issue number

            if (!issueNumber) return;
            console.log('Issue number:', issueNumber);

            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const { data: issue } = await github.rest.issues.get({
              owner,
              repo,
              issue_number: issueNumber
            });
            let body = issue.body || '';

            // TODO: check if checkboxes exist section, then show Progress: 0/0 (0/0 pts)

            // Parse checkboxes and points
            function calculateProgress(text) {
              const checkboxRegex = /^[ \t]*- \[( |x|X)\]/gm;
              // const pointRegex = /^\s*-\s*\[( |x|X)\]\((\d+)(?:\s*pts?)?\)/gm;
              const pointRegex = /^[ \t]*- \[( |x|X)\][^\n]*\((\d+)\s*pts?\)/gm;

              const checkboxes = [...text.matchAll(checkboxRegex)];
              const points = [...text.matchAll(pointRegex)];

              let totalTasks = checkboxes.length;
              let doneTasks = checkboxes.filter(m => m[1].toLowerCase() === 'x').length;

              let totalPoints = 0, donePoints = 0;
              for (const m of points) {
                const pts = parseInt(m[2], 10) || 0;
                totalPoints += pts;
                if (m[1].toLowerCase() === 'x') donePoints += pts;
              }

              return { totalTasks, doneTasks, totalPoints, donePoints };
            }

            // Update per-section progress
            const sectionRegex = /(## [^\n]+?\n)([\s\S]*?)(?=\n## |\n*$)/g;
            body = body.replace(sectionRegex, (match, header, sectionBody) => {
              const progress = calculateProgress(sectionBody);
              if (!progress || progress.totalTasks === 0) return match;
              const newProgressLine = `**Progress: ${progress.doneTasks}/${progress.totalTasks} (${progress.donePoints}/${progress.totalPoints} pts)**`;

              if (sectionBody.includes('**Progress:')) {
                sectionBody = sectionBody.replace(/\*\*Progress:.*?\*\*/g, newProgressLine);
              } else {
                sectionBody = newProgressLine + '\n\n' + sectionBody;
              }

              return header + sectionBody;
            });

            // Overall progress
            const overallProgress = calculateProgress(body);
            let overallBlock = '';

            if (overallProgress && overallProgress.totalTasks > 0) {
              const filledCount = Math.round((overallProgress.doneTasks / overallProgress.totalTasks) * 20);
              const filled = '█'.repeat(Math.min(Math.max(filledCount,0),20));
              const empty = '░'.repeat(20 - filled.length);
              const bar = filled + empty;

              overallBlock =
                '<!-- CHECKLIST_PROGRESS_START -->\n' +
                `**Progress:** ${overallProgress.doneTasks}/${overallProgress.totalTasks} (${overallProgress.donePoints}/${overallProgress.totalPoints} pts)\n` +
                bar + '\n' +
                '<!-- CHECKLIST_PROGRESS_END -->\n\n';
            }
            body = body.replace(/<!-- CHECKLIST_PROGRESS_START -->[\s\S]*?<!-- CHECKLIST_PROGRESS_END -->\n*/m, '');
            const newBody = overallBlock + body;

            if (newBody.trim() !== issue.body.trim()) {
              await github.rest.issues.update({
                owner,
                repo,
                issue_number: issueNumber,
                body: newBody
              });
            }
              console.log('Checklist progress updated successfully.');
